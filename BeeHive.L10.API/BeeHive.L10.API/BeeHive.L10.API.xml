<?xml version="1.0"?>
<doc>
    <assembly>
        <name>BeeHive.L10.API</name>
    </assembly>
    <members>
        <member name="T:BeeHive.L10.API.Authentication.AuthenticationModel">
            <summary>
            
            </summary>
        </member>
        <member name="P:BeeHive.L10.API.Authentication.AuthenticationModel.AccessToken">
            <summary>
            
            </summary>
        </member>
        <member name="T:BeeHive.L10.API.Authentication.TokenGenerator">
            <summary>
            
            </summary>
        </member>
        <member name="M:BeeHive.L10.API.Authentication.TokenGenerator.#ctor(BeeHive.L20.Services.SL10.IServices.Common.IRefreshTokenService)">
            <summary>
            
            </summary>
            <param name="token"></param>
        </member>
        <member name="M:BeeHive.L10.API.Authentication.TokenGenerator.GenerateToken(BeeHive.L20.Services.SL20.Model.Common.HopperModel)">
            <summary>
            
            </summary>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:BeeHive.L10.API.Authentication.TokenGenerator.GenerateRefereshToken(System.Int64)">
            <summary>
            
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="T:BeeHive.L10.API.Controllers.AuthController">
            <summary>
            Authentications
            </summary>
        </member>
        <member name="M:BeeHive.L10.API.Controllers.AuthController.#ctor(BeeHive.L20.Services.SL10.IServices.Common.IUserServices,BeeHive.L10.API.Authentication.ITokenGenerator,BeeHive.L20.Services.SL10.IServices.Common.IRefreshTokenService)">
            <summary>
            Authentications
            </summary>
            <param name="user"></param>
            <param name="tokenGenerator"></param>
            <param name="token"></param>
        </member>
        <member name="M:BeeHive.L10.API.Controllers.AuthController.Login(BeeHive.L20.Services.SL20.Model.LoginModel)">
            <summary>
            Username and password are excepted
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:BeeHive.L10.API.Controllers.AuthController.RefreshToken">
            <summary>
            Get Refresh Token
            </summary>
            <returns></returns>
        </member>
        <member name="M:BeeHive.L10.API.Controllers.AuthController.LogOut">
            <summary>
            Logout
            </summary>
            <returns></returns>
        </member>
        <member name="T:BeeHive.L10.API.Controllers.MenuController">
            <summary>
            Menu controller
            </summary>
        </member>
        <member name="M:BeeHive.L10.API.Controllers.MenuController.#ctor(BeeHive.L20.Services.SL10.IServices.IMenuService)">
            <summary>
            Menu CRUD
            </summary>
            <param name="menu"></param>
        </member>
        <member name="M:BeeHive.L10.API.Controllers.MenuController.Get">
            <summary>
            Get all menu
            </summary>
            <returns>Menu list</returns>
        </member>
        <member name="M:BeeHive.L10.API.Controllers.MenuController.GetById(System.Int32)">
            <summary>
            Get a menu by id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:BeeHive.L10.API.Controllers.MenuController.Create(BeeHive.L20.Services.SL20.Model.MenuModel)">
            <summary>
            Create Menu
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:BeeHive.L10.API.Controllers.MenuController.Update(BeeHive.L20.Services.SL20.Model.MenuModel)">
            <summary>
            Update a menu
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:BeeHive.L10.API.Controllers.MenuController.Delete(System.Int32)">
            <summary>
            Delete a role menu
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:BeeHive.L10.API.Controllers.MenuController.GetAllMenuLookup">
            <summary>
            Fetch Id, Banner of all the menu
            </summary>
            <returns>Menu as lookup</returns>
        </member>
        <member name="T:BeeHive.L10.API.Controllers.RoleController">
            <summary>
            CRUD Roles
            </summary>
        </member>
        <member name="M:BeeHive.L10.API.Controllers.RoleController.#ctor(BeeHive.L20.Services.SL10.IServices.IRoleServices)">
            <summary>
            
            </summary>
            <param name="role"></param>
        </member>
        <member name="M:BeeHive.L10.API.Controllers.RoleController.Get">
            <summary>
            Get all roles from DB
            </summary>
            <returns></returns>
        </member>
        <member name="M:BeeHive.L10.API.Controllers.RoleController.GetById(System.Int32)">
            <summary>
            Get a role by id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:BeeHive.L10.API.Controllers.RoleController.Create(BeeHive.L20.Services.SL20.Model.RoleModel)">
            <summary>
            Create a new role
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:BeeHive.L10.API.Controllers.RoleController.Update(BeeHive.L20.Services.SL20.Model.RoleModel)">
            <summary>
            Update a role
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:BeeHive.L10.API.Controllers.RoleController.Delete(System.Int32)">
            <summary>
            Delete a role
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:BeeHive.L10.API.Controllers.RoleMenuController">
            <summary>
            RoleMenu actions
            </summary>
        </member>
        <member name="M:BeeHive.L10.API.Controllers.RoleMenuController.#ctor(BeeHive.L20.Services.SL10.IServices.IRoleMenuServices)">
            <summary>
            Role Menu Constructor
            </summary>
            <param name="roleMenu"></param>
        </member>
        <member name="M:BeeHive.L10.API.Controllers.RoleMenuController.Get">
            <summary>
            Get all role menus
            </summary>
            <returns></returns>
        </member>
        <member name="M:BeeHive.L10.API.Controllers.RoleMenuController.GetById(System.Int32)">
            <summary>
            Get a role menu by id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:BeeHive.L10.API.Controllers.RoleMenuController.Create(BeeHive.L20.Services.SL20.Model.RoleMenuModel)">
            <summary>
            Create a role menu
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:BeeHive.L10.API.Controllers.RoleMenuController.Update(BeeHive.L20.Services.SL20.Model.RoleMenuModel)">
            <summary>
            Update a role menu
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:BeeHive.L10.API.Controllers.RoleMenuController.Delete(System.Int32)">
            <summary>
            Delete a role menu
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:BeeHive.L10.API.Controllers.Common.UserController">
            <summary>
            User Create, Read, Update and Delete
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:BeeHive.L10.API.Controllers.Common.UserController.#ctor(BeeHive.L20.Services.SL10.IServices.Common.IUserServices)" -->
        <member name="M:BeeHive.L10.API.Controllers.Common.UserController.Get">
            <summary>
            Get all user
            </summary>
            <returns>Menu list</returns>
        </member>
        <member name="M:BeeHive.L10.API.Controllers.Common.UserController.GetById(System.Int32)">
            <summary>
            Get user by id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:BeeHive.L10.API.Controllers.Common.UserController.Create(BeeHive.L20.Services.SL20.Model.Common.HopperModel)">
            <summary>
            Create User
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:BeeHive.L10.API.Controllers.Common.UserController.Update(BeeHive.L20.Services.SL20.Model.Common.HopperModel)">
            <summary>
            Update user
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:BeeHive.L10.API.Controllers.Common.UserController.Delete(System.Int32)">
            <summary>
            Delete a user
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:BeeHive.L10.API.Controllers.EmployeeController">
            <summary>
            Employee controller
            </summary>
        </member>
        <member name="M:BeeHive.L10.API.Controllers.EmployeeController.#ctor(BeeHive.L20.Services.SL10.IServices.IEmployeeService)">
            <summary>
            Constructor
            </summary>
            <param name="employee"></param>
        </member>
        <member name="M:BeeHive.L10.API.Controllers.EmployeeController.Get">
            <summary>
            This is test
            </summary>
            <returns></returns>
        </member>
        <member name="M:BeeHive.L10.API.Controllers.EmployeeController.GetById(System.Int32)">
            <summary>
            This is second test
            </summary>
            <param name="id"> this is test variables.</param>
            <returns></returns>
        </member>
        <member name="M:BeeHive.L10.API.Controllers.EmployeeController.Create(BeeHive.L20.Services.SL20.Model.EmployeesModel)">
            <summary>
            create
            </summary>
            <param name="model">dd</param>
            <returns>ssss</returns>
        </member>
        <member name="M:BeeHive.L10.API.Controllers.EmployeeController.Update(BeeHive.L20.Services.SL20.Model.EmployeesModel)">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:BeeHive.L10.API.Controllers.EmployeeController.Delete(System.Int32)">
            <summary>
            
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:BeeHive.L10.API.Helpers.AuthorizationFilter">
            <summary>
             If This class is called as an attribute in an action or a controller.
             The controller has to pass through the authoriation test
            </summary>
        </member>
        <member name="M:BeeHive.L10.API.Helpers.AuthorizationFilter.#ctor(Microsoft.AspNetCore.Mvc.Infrastructure.IActionDescriptorCollectionProvider)">
            <summary>
            Constructor
            </summary>
            <param name="actionDescriptorCollectionProvider"></param>
        </member>
        <member name="M:BeeHive.L10.API.Helpers.AuthorizationFilter.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)">
            <summary>
            Prior to executing
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:BeeHive.L10.API.Helpers.AuthorizationFilter.OnActionExecuted(Microsoft.AspNetCore.Mvc.Filters.ActionExecutedContext)">
            <summary>
            Post executing.
            </summary>
            <param name="context"></param>
        </member>
        <member name="T:BeeHive.L10.API.Loaders.DependencyContainer">
            <summary>
            
            </summary>
        </member>
        <member name="M:BeeHive.L10.API.Loaders.DependencyContainer.Initialize(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            
            </summary>
            <param name="services"></param>
        </member>
        <member name="T:BeeHive.L10.API.Loaders.SwaggerServiceExtension">
            <summary>
            
            </summary>
        </member>
        <member name="M:BeeHive.L10.API.Loaders.SwaggerServiceExtension.AddSwaggerDocumentation(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            
            </summary>
            <param name="services"></param>
            <returns></returns>
        </member>
        <member name="M:BeeHive.L10.API.Loaders.SwaggerServiceExtension.UseSwaggerDocumentation(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            
            </summary>
            <param name="app"></param>
            <returns></returns>
        </member>
        <member name="M:BeeHive.L10.API.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            
            </summary>
            <param name="app"></param>
            <param name="env"></param>
        </member>
    </members>
</doc>
